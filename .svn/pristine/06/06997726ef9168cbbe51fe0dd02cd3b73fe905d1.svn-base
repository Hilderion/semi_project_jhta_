<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN"
    "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap>
	<select id="getItemsByCategoryNo" parameterClass="int" resultClass="kr.co.team2.vo.Item">
			<!-- 카테고리 상위번호로 제품 조회하기 -->
			select 
				A.item_no                      as no, 
				A.item_name                    as name, 
				A.item_contents                as contents,
				A.item_price                   as price,  
				A.item_current_discount        as currentDiscount, 
				A.item_image                   as image
			from items A, categorys B, categorys C 
			where A.cate_no = B.cate_no 
			and B.cate_sub_no = C.cate_no
			and C.cate_no = #value#
	</select>
	
	<select id="getItemsByDetailNo" parameterClass="int" resultClass="kr.co.team2.vo.Item">
			<!-- 상세 제품 확인하기 ex) 아우터 -> 자켓 -->
		 	select 
				A.item_no                      as no, 
				A.item_name                    as name, 
				A.item_contents                as contents,
				A.item_price                   as price, 
				A.item_current_discount        as currentDiscount, 
				A.item_image                   as image
			from items A, categorys B, categorys C 
			where A.cate_no = B.cate_no 
			and B.cate_sub_no = C.cate_no 
			and B.cate_no = #value#
	</select>
	
	<select id="getItemByItemNo" parameterClass="int" resultClass="kr.co.team2.vo.Item">
			<!-- 아이템 번호로 해당 제품 상세 정보 얻기  -->
			select 
				A.item_name         as name, 
				A.item_contents     as contents, 
				A.item_price        as price, 
				B.opt_color         as "option.color",
				B.opt_size          as "option.size"				
			from items A, options B
			where A.item_no = B.item_no
			and A.item_no = #value#
	</select>
	
	<select id="itemsOrderByDate">
			<!-- 제품 등록 날짜순으로 상위 개념 제품 나열하기 (ex-아우터 제품들 조회) -->
			select 
				A.item_no                      as no, 
				A.item_name                    as name, 
				A.item_contents                as contents,
				A.item_price                   as price, 
				A.item_current_discount        as currentDiscount, 
				A.item_image                   as image,
				A.item_create_date             as createDate
			from items A, categorys B, categorys C 
			where A.cate_no = B.cate_no 
			and B.cate_sub_no = C.cate_no 
			and C.cate_no = #value#
			order by A.item_create_date desc;
	</select>
	
	<select id="itemsOrderByHighPrice">
			<!-- 높은 가격 순으로 상위 개념 제품 나열하기 -->
			select 
				A.item_no                      as no, 
				A.item_name                    as name, 
				A.item_contents                as contents,
				A.item_price                   as price, 
				A.item_current_discount        as currentDiscount, 
				A.item_image                   as image
			from items A, categorys B, categorys C 
			where A.cate_no = B.cate_no 
			and B.cate_sub_no = C.cate_no 
			and C.cate_no = #value#
			order by A.item_price desc 
	</select>
	
	<select id="itemsOrderByLowPrice">
		<!-- 낮은 가격 순으로 하위 개념 제품 나열하기 -->
		select 
			A.item_no                    as no, 
			A.item_name                  as name, 
			A.item_contents              as contents, 
			A.item_price                 as price, 
			A.item_current_discount      as currentDiscount, 
			A.item_image                 as image
		from items A, categorys B, categorys C 
		where A.cate_no = B.cate_no 
		and B.cate_sub_no = C.cate_no 
		and C.cate_no = #value#
		order by A.item_price
	</select>
	
	<select id="itemsOrderByStock">
		<!-- 인기 상품 조회 (재고량이 적은 순으로 조회) -->
		select 
			A.item_no                    as no, 
			A.item_name                  as name, 
			A.item_contents              as contents, 
			A.item_price                 as price, 
			A.item_current_discount      as currentDiscount, 
			A.item_image                 as image
		from items A, categorys B, categorys C, options D 
		where A.cate_no = B.cate_no 
		and B.cate_sub_no = C.cate_no 
		and A.item_no = D.item_no
		and C.cate_no = #value#
		order by D.opt_stock
	</select>
	
</sqlMap>