package kr.co.team2.controller;

import java.io.IOException;
import java.sql.SQLException;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import com.oreilly.servlet.MultipartRequest;

import kr.co.jhta.mvc.annotation.Controller;
import kr.co.jhta.mvc.annotation.RequestMapping;
import kr.co.jhta.mvc.servlet.JSONView;
import kr.co.jhta.mvc.servlet.ModelAndView;
import kr.co.team2.service.admin.BoardManagementService;
import kr.co.team2.service.admin.ItemManagementService;
import kr.co.team2.service.admin.OrderManagementService;
import kr.co.team2.service.admin.UserManagementService;
import kr.co.team2.vo.Category;
import kr.co.team2.vo.Item;
import kr.co.team2.vo.Option;
import kr.co.team2.vo.Orders;
@Controller
public class AdminController {
	
	ItemManagementService itemService = new ItemManagementService();
	BoardManagementService boardService = new BoardManagementService();
	OrderManagementService orderSevice = new OrderManagementService();
	UserManagementService userService = new UserManagementService();
	/*
	 * 메인 화면
	 */
	@RequestMapping("/admin/main/home.do")
	public ModelAndView home(HttpServletRequest request, HttpServletResponse response) {
		ModelAndView mav = new ModelAndView();
		
		mav.setViewName("admin/etc/home.jsp");
		return mav;
	}
	
	/*
	 * 차트
	 */
	@RequestMapping("/admin/etc/charts.do")
	public ModelAndView chartList(HttpServletRequest request, HttpServletResponse response) {
		ModelAndView mav = new ModelAndView();
		
		mav.setViewName("admin/etc/charts.jsp");
		return mav;
	}
	
	/*
	 * 상품 등록 폼 
	 */
	@RequestMapping("/admin/product/addform.do")
	public ModelAndView productAddform(HttpServletRequest request, HttpServletResponse response) throws SQLException {
		ModelAndView mav = new ModelAndView();
		
		List<Category> categorys = itemService.getTopCategorys();
		
		mav.addAttribute("topCategorys", categorys);
		mav.setViewName("admin/product/addform.jsp");
		return mav;
	}
	/*
	 * 상품 등록 
	 */
	@RequestMapping("/admin/product/add.do")
	public ModelAndView productAdd(HttpServletRequest request, HttpServletResponse response) throws SQLException, IOException {
		ModelAndView mav = new ModelAndView();
		
		MultipartRequest mr = new MultipartRequest(request, "/images/items");
		
		mav.setViewName("admin/product/addform.jsp");
		return mav;
	}
	
	
	/*
	 * Ajax Json 하위 카테고리
	 */
	@RequestMapping("/admin/product/childCategory.do")
	public ModelAndView getChildCategorys(HttpServletRequest request, HttpServletResponse response) throws SQLException{
		ModelAndView mav = new ModelAndView();
		
		List<Category> categorys = itemService.getChildCategorys(Integer.parseInt(request.getParameter("categoryNo")));
		
		mav.addAttribute("childCategorys", categorys);
		mav.setView(new JSONView());
		return mav;
	}
	
	/*
	 * 상품 목록
	 */
	@RequestMapping("/admin/product/list.do")
	public ModelAndView productList(HttpServletRequest request, HttpServletResponse response) throws SQLException {
		ModelAndView mav = new ModelAndView();
		
		List<Item> items = itemService.getAllItems();

		request.setAttribute("items", items);
		mav.setViewName("admin/product/list.jsp");
		return mav;
	}
	
	/*
	 * Ajax Json 상품 디테일
	 */
	@RequestMapping("/admin/product/detail.do")
	public ModelAndView productDetail(HttpServletRequest request, HttpServletResponse response) throws SQLException{
		ModelAndView mav = new ModelAndView();

		mav.addAttribute("item", itemService.getItemByNo(Integer.parseInt(request.getParameter("itemNo"))));
		mav.setView(new JSONView());
		return mav;
	}
	
	@RequestMapping("/admin/product/category.do")
	public ModelAndView category(HttpServletRequest request, HttpServletResponse response) {
		ModelAndView mav = new ModelAndView();
		
		mav.setViewName("admin/product/category.jsp");
		return mav;
	}
	
	@RequestMapping("/admin/product/stock.do")
	public ModelAndView stock(HttpServletRequest request, HttpServletResponse response) {
		ModelAndView mav = new ModelAndView();
			 
			
		mav.setViewName("admin/product/stock.jsp");
		return mav;
	}
	
	@RequestMapping("/admin/order/list.do")
	public ModelAndView orderList(HttpServletRequest request, HttpServletResponse response) {
		ModelAndView mav = new ModelAndView();
		List<Orders> orders = null;
		mav.setViewName("admin/order/list.jsp");
		return mav;
	}
	
	@RequestMapping("/admin/order/mgt.do")
	public ModelAndView orderManagement(HttpServletRequest request, HttpServletResponse response) {
		ModelAndView mav = new ModelAndView();
		
		mav.setViewName("admin/order/mgt.jsp");
		return mav;
	}
	
	@RequestMapping("/admin/user/list.do")
	public ModelAndView userList(HttpServletRequest request, HttpServletResponse response) {
		ModelAndView mav = new ModelAndView();
		
		mav.setViewName("admin/user/list.jsp");
		return mav;
	}
	
	@RequestMapping("/admin/user/mgt.do")
	public ModelAndView userManagement(HttpServletRequest request, HttpServletResponse response) {
		ModelAndView mav = new ModelAndView();
		
		mav.setViewName("admin/user/mgt.jsp");
		return mav;
	}
	
	@RequestMapping("/admin/user/log.do")
	public ModelAndView loginLog(HttpServletRequest request, HttpServletResponse response) {
		ModelAndView mav = new ModelAndView();
		
		mav.setViewName("admin/user/log.jsp");
		return mav;
	}
	
	@RequestMapping("/admin/board/board.do")
	public ModelAndView boardList(HttpServletRequest request, HttpServletResponse response) {
		ModelAndView mav = new ModelAndView();
		
		mav.setViewName("admin/board/boardlist.jsp");
		return mav;
	}
	
	@RequestMapping("/admin/board/reviews.do")
	public ModelAndView reviewList(HttpServletRequest request, HttpServletResponse response) {
		ModelAndView mav = new ModelAndView();
		
		mav.setViewName("admin/board/reviewlist.jsp");
		return mav;
	}
	
}
