package kr.co.team2.controller;

import java.sql.SQLException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import kr.co.jhta.mvc.annotation.Controller;
import kr.co.jhta.mvc.annotation.RequestMapping;
import kr.co.jhta.mvc.servlet.ModelAndView;
import kr.co.team2.dao.OrderListDao;
import kr.co.team2.dao.OrdersDao;
import kr.co.team2.vo.Option;
import kr.co.team2.vo.OrderDetail;
import kr.co.team2.vo.Orders;
import kr.co.team2.vo.User;

@Controller
public class OrderController {

	@RequestMapping("/orders/save.do")
	public ModelAndView orders (HttpServletRequest request, HttpServletResponse response) throws SQLException {
		
		ModelAndView mav = new ModelAndView();
		
		HttpSession session = request.getSession();
		User user = (User)session.getAttribute("LOGIN_USER_INFO");
		if (user == null) {
			mav.setViewName("redirect:http://localhost/home.do");
			return mav;
		}
		
		
		OrdersDao orderDao = OrdersDao.getInstance();
		int orderNo = orderDao.getOrderSeq();
		int qty = Integer.parseInt(request.getParameter("qty"));
		int optionNo = Integer.parseInt(request.getParameter("optNo"));
		
		Orders orders = new Orders();
		orders.setNo(orderNo);
		orders.setUser(user);
		
		orderDao.saveOrder(orders);
		
		
		OrderDetail orderDetail = new OrderDetail();
		orderDetail.setQty(qty);
		orderDetail.setOrder(orders);
		Option option = new Option();
		option.setNo(optionNo);
		orderDetail.setOption(option);
		orderDao.saveOrderDetail(orderDetail);
		
		mav.setViewName("redirect:completed.do");
		
		
		return mav;
		
	}
	
	
	// 주문완료 페이지 링크
	@RequestMapping("/orders/completed.do")
	public ModelAndView completed (HttpServletRequest request, HttpServletResponse response) throws SQLException {
		
		ModelAndView mav = new ModelAndView();
		
		HttpSession session = request.getSession();
		User user = (User)session.getAttribute("LOGIN_USER_INFO");
		if (user == null) {
			mav.setViewName("redirect:http://localhost/home.do");
			return mav;
		}
		
		mav.setViewName("orders/completed.jsp");
		return mav;
	}
	

	// 주문조회
	@RequestMapping("/orders/saveList.do")
	public ModelAndView ordersSave (HttpServletRequest request, HttpServletResponse response) throws SQLException {
		
		ModelAndView mav = new ModelAndView();
		
		HttpSession session = request.getSession();
		User user = (User)session.getAttribute("LOGIN_USER_INFO");
		if (user == null) {
			mav.setViewName("redirect:http://localhost/home.do");
			return mav;
		}
		
		String startDate = request.getParameter("searchStartDate");
		String endDate = request.getParameter("searchEndDate");
		
		Map<String, Object> params = new HashMap<>();
		
		params.put("userno", user.getNo());
		if (startDate != null && !startDate.isEmpty()) {
			params.put("startDate", startDate);
		}
		if (endDate != null && !endDate.isEmpty()) {
			params.put("endDate", endDate);
		}

		
		OrdersDao ordersDao = OrdersDao.getInstance();
		List<OrderDetail> orders = ordersDao.getOrders(params);
		
		mav.addAttribute("orders", orders);
		mav.setViewName("orders/orderList.jsp");
		
		return mav;
	}
	
	
	// 상품 --> 주문하기
	@RequestMapping("/orders/orders.do")
	public ModelAndView orderSave (HttpServletRequest request, HttpServletResponse response) throws SQLException {
		
		ModelAndView mav = new ModelAndView();
		
		HttpSession session = request.getSession();
		User user = (User)session.getAttribute("LOGIN_USER_INFO");
		if (user == null) {
			mav.setViewName("redirect:http://localhost/home.do");
			return mav;
		}
		
		int optNo = Integer.parseInt(request.getParameter("optNo"));
		int qty = Integer.parseInt(request.getParameter("amount"));
		
		OrderListDao orderListDao = OrderListDao.getInstance();
		Option option = orderListDao.getOrderOption(optNo);
		
		mav.addAttribute("option", option );
		mav.addAttribute("qty", qty );
		mav.setViewName("orders/orders.jsp");
		
		return mav;
		

	}
	
	
}
